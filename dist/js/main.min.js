var Enemy=function(){var a=null;this.Id=0,this.Name="",this.Species="",this.Level=1,this.Experience=0,this.Gold=100,this.Health=20,this.HealthDelta=0,this.Mana=0,this.ManaDelta=0,this.Equipment={Weapon:"None",Armor:"None",Accessory:"None"},this.SetRoom=function(b){b instanceof Room&&(a=b)},this.Kill=function(){Lynx.Log("Enemy "+this.Name+" has been killed!")}},Trog=function(){Enemy.call(this),this.Species="Trog",this.Experience=50,this.Gold=25,this.Health=5,this.Mana=0};Trog.prototype={construtor:Enemy},Game={Start:function(){this.Initialize(),this.LoadAssets(function(){this.LoadComponents(function(){this.SetupScene(),this.Ready()}.bind(this))}.bind(this))},Initialize:function(){},LoadAssets:function(a){Lynx.AM.LoadQueue(a)},LoadComponents:function(a){Lynx.CM.Load("Tracker","Timer"),Lynx.CM.On("ComponentManager.Ready",a)},SetupScene:function(){Lynx.Start()},Ready:function(){var a=new Hero;a.Name="John";var b=new Trog;b.Name="Hugo",a.Kill(),b.Kill(),Rooms.push(new Room(300,300))}},console.log("GAME LOADED");var Hero=function(){var a=null;this.Id=0,this.Name="",this.Class=HeroClass.WARRIOR,this.Level=1,this.Experience=0,this.Gold=100,this.Health=20,this.HealthDelta=0,this.Mana=10,this.ManaDelta=0,this.Equipment={Weapon:"Sword",Armor:"Chain",Accessory:"Severed human hand"},this.SetRoom=function(b){b instanceof Room&&(a=b)},this.Kill=function(){Lynx.Log("Hero "+this.Name+" has been killed!")}},HeroClass={WARRIOR:0};Game.Rooms={content:[],push:function(a){this.content.push(a)},findRoom:function(a,b){return foundRoom=_.find(content,function(c){return c.x===a&&c.y===b?c:void 0})}},Room=function(a,b){this.id=1,this.x=a,this.y=b,this.North=null,this.South=null,this.East=null,this.West=null,this.name="",this.type={},this.mobs=[],this.entity=new Lynx.Entity(a,b,40,40),this.entity.Color=14593470,Lynx.Scene.AddEntity(this.entity),this.addRoom=function(c){var d,e="";return c=c.toLowerCase(),"n"===c||"north"===c?(d=new Room(a,b+50),null===this.North?(this.North=d,d.South=this):e="Room to the North already exists."):"s"===c||"south"===c?null===this.South?(d=new Room(a,b-50),this.South=d,d.North=this):e="Room to the South already exists.":"e"===c||"east"===c?null===this.East?(d=new Room(a+50,b),this.East=d,d.West=this):e="Room to the East already exists.":"w"===c||"west"===c?null===this.West?(d=new Room(a-50,b),this.West=d,d.East=this):e="Room to the West already exists.":e="No/Invalid Direction Specified When Creating Room",e?(console.log(e),delete d,!1):(d.id=Game.Rooms.content.length,Rooms.push(d),d)}},RoomFactory=function(){},walk=function(a,b,c){c>=b||(Math.random()>=.6&&a.addRoom("n")&&walk(a.North,b,c+1),Math.random()>=.6&&a.addRoom("s")&&walk(a.South,b,c+1),Math.random()>=.6&&a.addRoom("e")&&walk(a.East,b,c+1),Math.random()>=.6&&a.addRoom("w")&&walk(a.West,b,c+1))};